#name: SonarCloud Analysis
#
#on:
#  push:
#    branches:
#      - '**'  # Trigger on all branches
#
#jobs:
#  sonarcloud:
#    name: Run SonarCloud Analysis
#    runs-on: ubuntu-22.04
#    steps:
#      - name: Check out the Git Repository
#        uses: actions/checkout@v4
#
#      - name: Set up Java toolchain
#        uses: actions/setup-java@v4
#        with:
#          distribution: "temurin"
#          java-version: "11"
#          cache: "gradle"
#
#      - name: Set gradlew as executable
#        run: chmod +x ./gradlew
#
#      - name: SonarCloud Scan
#        uses: SonarSource/sonarcloud-github-action@master
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#        with:
#          args: >
#            -Dsonar.organization=nabilcodes
#            -Dsonar.projectKey=Nabilcodes_eshop
#            -Dsonar.projectName=eshop
#            -Dsonar.java.binaries=./build/classes/java/main

name: SonarCloud
on:
  push:
    branches:
      - '**'  # Trigger on all branches
jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - name: Check out the Git Repository
        uses: actions/checkout@v4
      - name: Set up Java toolchain
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "21"
          cache: "gradle"
      - name: Set gradlew as executable
        run: chmod +x ./gradlew
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew build sonar --info
